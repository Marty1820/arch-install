#!/bin/bash

# Packages
pacman --needed --noconfirm -Sy alacritty alsa-utils blueman bluez-utils btop calibre checkbashisms cheese cronie dash dunst \
exa exfat-utils fail2ban fprintd fwupd gimp gparted grim slurp imv kdeconnect libreoffice-still man-db man-pages nano \
nm-connection-editor nvme-cli pacman-contrib powerline-fonts reflector snapper starship sway tldr tlp tree ttf-font-awesome ttf-hack \
ufw vlc wget wireguard-tools fuzzel xdg-user-dirs youtube-dl zsh zsh-autosuggestions zsh-completions zsh-syntax-highlighting \
pipewire wireplumber pipewire-pulse pipewire-alsa pamixer

#######WORK IN PROGRESS################

## Get resume offset for BTRFS swapfile
cd /root/ || exit
curl -LJO https://raw.githubusercontent.com/osandov/osandov-linux/master/scripts/btrfs_map_physical.c
gcc -O2 -o btrfs_map_physical btrfs_map_physical.c
rm btrfs_map_physical.c
# I wouldn't fully trust this and make sure your verify after reboot
printf "
#######################################################\n### I WOULD CHECK THIS AFTER YOU ARE IN YOUR SYSTEM ###\n###   WORK IN PROGRESS section 'finishing_touches'  ###\n#######################################################"
sleep 5
OFFSET=$(./btrfs_map_physical /swap/swapfile | awk -F '\t' 'FNR == 2 {print $NF}')
PAGESIZE=$(getconf PAGESIZE)
((RESUME_OFFSET=$OFFSET/$PAGESIZE))
sleep 5
UUID=$(blkid | grep mapper | awk '{print $2}' | tr -d '"')
CRYPTUUID=$(blkid | grep p2 | awk '{print $2}' | tr -d '"')

#https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate#Hibernation_into_swap_file_on_Btrfs
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet"/GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet mem_sleep_default=deep resume='$UUID' resume_offset='$RESUME_OFFSET'"/' /etc/default/grub
sed -i 's/GRUB_CMDLINE_LINUX=""/GRUB_CMDLINE_LINUX="cryptdevice='$CRYPTUUID':root root=/dev/mapper/root net.ifnames=0"/' /etc/default/grub
sed -i 's/#GRUB_ENABLE_CRYPTODISK=y/GRUB_ENABLE_CRYPTODISK=y/' /etc/default/grub
sed -i 's/#GRUB_SAVEDEFAULT=true/GRUB_SAVEDEFAULT=true/' /etc/default/grub
sed -i 's/GRUB_DEFAULT=0/GRUB_DEFAULT=saved/' /etc/default/grub

##############
##APP SETUP ##
##############

# Notifications Setup Using 'dunst'
pacman --needed --noconfirm -S dunst libnotify
touch /usr/share/dbus-1/services/org.freedesktop.Notifications.service
tee /usr/share/dbus-1/services/org.freedesktop.Notifications.service > /dev/null <<EOT
[D-BUS Service]
Name=org.freedesktop.Notifications
Exec=/usr/bin/dunst
EOT

##############
##AUR HELPER##
##############
# PARU Setup
pacman --needed -S base-devel
git clone https://aur.archlinux.org/paru.git && cd paru || return
makepkg -si
cd .. && rm -dR paru
# AUR PACKAGES
paru -S brave-bin minecraft-launcher nerd-fonts-complete ttf-ms-fonts visual-studio-code-bin wev wlsunset
exit && cd ~

# Enabling extra services
systemctl enable tlp.service
systemctl mask systemd-rfkill.service
systemctl mask systemd-rfkill.socket
systemctl enable bluetooth.service
systemctl enable systemd-timesyncd.service
systemctl --user enable --now pipewire-pulse.socket

# Logind.conf settings
sed -i 's/#HandleLidSwitch=suspend/HandleLidSwitch=hibernate\\\nHandleLidSwitchExternalPower=suspend/' /etc/systemd/logind.conf
sed -i 's/#HoldoffTimeoutSec=30s/HoldoffTimeoutSec=30s/' /etc/systemd/logind.conf

# Laptop Settings
touch /etc/udev/rules.d/99-lowbat.rules
tee -a /etc/udev/rules.d/99-lowbat.rules > /dev/null <<EOT
# Suspend the system when battery level drops to 5% or lower
SUBSYSTEM=="power_supply", ATTR{status}=="Discharging", ATTR{capacity}=="[0-5]", RUN+="/usr/bin/systemctl hibernate"
EOT

# acpi issue
sed -i 's/#RebootWatchdogSec=0/RebootWatchdogSec=0/' /etc/systemd/system.conf

# Stuttering and periodic freeze/No longer needed but doesn't cause issue's
echo -e "options i915 enable_psr=0" >> /etc/modprobe.d/i915.conf

# Change /bin/sh to dash instead of bash
ln -sfT dash /usr/bin/sh
mkdir /etc/pacman.d/hooks
touch /etc/pacman.d/hooks/dashbinsh.hook
tee -a /etc/pacman.d/hooks/dashbinsh.hook  > /dev/null <<EOT
[Trigger]
Type = Package
Operation = Install
Operation = Upgrade
Target = bash

[Action]
Description = Re-pointing /bin/sh symlink to dash...
When = PostTransaction
Exec = /usr/bin/ln -sfT dash /usr/bin/sh
Depends = dash
EOT
