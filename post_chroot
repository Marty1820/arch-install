# Set the time zone
echo "Setting timezone."
ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
hwclock --systohc

# Localization
echo "Setting localization"
sed -i 's/#en_US.UTF-8 UTF-8\en_US.UTF-8 UTF-8/' /etc/locale.gen
echo LANG=en_US.UTF-8 >> /etc/locale.conf
locale-gen

# Hostname/Network configuration
echo "Configuring hostname/network"
read -p "Type Hostname > " HOSTNAME
echo $HOSTNAME >> /etc/hostname

echo "# <ip-address>    <hostname.domain.org>   <hostname>"
echo "127.0.0.1         localhost >> /etc/hosts"
echo "::1		        localhost >> /etc/hosts"
echo "127.0.1.1	        $HOSTNAME.localdomain	$HOSTNAME >> /etc/hosts"

# Creating a new initramfs
echo "Creating a new initramfs."
sed -i 's/MODULES=()/MODULES=(btrfs)/' /etc/mkinitcpio.conf
sed -i '/^#/!s/filesystems/encrypt filesystems resume/g' /etc/mkinitcpio.conf
mkinitcpio -P

# Setting root password
read -p "Type root passwd > " rootpwd
echo -e "$rootpwd\n$rootpwd" | passwd

# Creating a user
while true; do
	echo "
Please Select:
1. Create a new user
0. Done
"
	read -p "Enter selection [0-1] > "

	case "$REPLY" in
	0)	echo "Continue installation."
		break
		;;
	1)	echo "User creation"
		read -p "Type user name > " username
		read -p "Type user password > " userpwd
		useradd -m -G wheel $username
		echo -e "$userpwd\n$userpwd" | passwd $username
		sleep 2
		;;
	*)	echo "Invalid entry" >&2
		continue
		;;
	esac
done
sed -i 's/^# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/' /etc/sudoers

## PACMAN SETUP
sed -i 's/#Color/Color\\\nILoveCandy/' etc/pacman.conf
sed -i 's/#ParallelDownloads/ParallelDownloads/' etc/pacman.conf
sed -i 's/#CheckSpace/CheckSpace/' etc/pacman.conf

##############
## PACKAGES ##
##############

pacman --needed -Sy git pacman-contrib fwupd man-db man-pages texinfo systemd-resolvconf nm-connection-editor wireguard-tools tar libarchive \
binutils bzip2 gzip lzop xz zstd p7zip unrar zip unzip xarchiver curl tree exa wget

##############
##BOOTLOADER##
##############

if [[ $BOOT == 'uefi' ]]; then
	pacman --needed -S grub grub-btrfs efibootmgr
	grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB
else
	pacman --needed -S grub grub-btrfs
	grub-install --target=i386-pc /dev/$DISK
fi

## Custom GRUB entries
tee -a /etc/grud.d/40_custom > /dev/null <<EOT
menuentry "System shutdown" {
        echo "System shutting down..."
        halt
}
menuentry "System restart" {
        echo "System rebooting..."
        reboot
}
EOT

grub-mkconfig -o /boot/grub/grub.cfg

##############
##APP SETUP ##
##############

# FAIL2BAN Setup
pacman --needed --noconfirm -S fail2ban
cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
touch /var/log/auth.log
tee -a /etc/fail2ban/jail.local > /dev/null <<EOT
[ssh]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 6
EOT
systemctl enable fail2ban.service

# UFW Defaults
pacman --needed --noconfirm -S ufw
ufw default deny incoming
ufw default allow outgoing
systemctl enable ufw.service
# ufw enable

# Antivirus/Malware
pacman --needed --noconfirm -S clamav clamtk
freshclam
systemctl enable clamav-freshclam.service
systemctl enable clamav-daemon.service

# Services
systemctl enable paccache.timer
systemctl enable NetworkManager.service
systemctl enable systemd-resolved.service
systemctl enable fstrim.timer

## Finishing touches document create
touch /home/$username/finishing-touches.txt
tee -a /home /$username//finishing-touches.txt > /dev/null <<EOT
Verify '/etc/default/grub' is setup right for hibernation
then run 'grub-mkconfig -o /boot/grub/grub.cfg' for proper setup

Setup backups run 'sudo timeshift-gtk' in terminal

run 'sudo ufw enable' to start firewall

# for complete setup
wget https://raw.githubusercontent.com/Marty1820/arch-install/main/finishing_touches
EOT

exit
swapoff /mnt/swap/swapfile
umount -R /mnt
echo "We are done. Reboot your computer and remove installation media"
echo "Read and run if wanted 'finishing-touches.txt' in your home folder after login"
